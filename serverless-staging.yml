service: newrelic-log-ingestion
variablesResolutionMode: 20210326

provider:
  name: aws
  runtime: python3.9
  stage: staging
  region: us-east-2
  memorySize: 128  # ram in MB
  timeout: 60 # timeout in seconds
  lambdaHashingVersion: 20201221

  iam:
    role:
      name: staging-newrelic-logs-shipper
      path: /staging-common-services/
      managedPolicies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      tags:
        Service: common-services
        Environment: staging
        Component: newrelic-logs-shipper

  environment:
    # Determines if logs are forwarded to New Relic Infrastructure
    INFRA_ENABLED: ${env:INFRA_ENABLED, "False"}
    # Your NewRelic license key
    LICENSE_KEY: ${ssm(us-west-2):/common/infra/NEWRELIC_LICENSE}
    # Determines if logs are forwarded to New Relic Logging
    LOGGING_ENABLED: ${env:LOGGING_ENABLED, "True"}
    # A boolean to determine if you want to output debug messages in the CloudWatch console
    DEBUG_LOGGING_ENABLED: ${env:DEBUG_LOGGING_ENABLED, "False"}

  deploymentBucket:
    name: flytrex-serverless-staging
    skipPolicySetup: true
  deploymentPrefix: newrelic-logs-shipper  # s3 bucket prefix appended to deployments

custom:
  pythonRequirements:
    dockerizePip: true
    dockerFile: ./Dockerfile

package:
  exclude:
    - ./**
  include:
    - ./LICENSE
    - ./src/function.py

functions:
  stagingNewrelicLogIngestion:
    description: Send log data from CloudWatch Logs to New Relic Infrastructure (Cloud Integrations) and New Relic Logging.
    handler: src/function.lambda_handler
    name: staging-newrelic-log-ingestion
    reservedConcurrency: 10 # optional, reserved concurrency limit for this function. By default, AWS uses account concurrency limit

plugins:
  - serverless-python-requirements
